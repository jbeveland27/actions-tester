name: CI

on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [semantic-release]

env:
  THIRD_PARTY_GIT_AUTHOR_EMAIL: opensource+bot@newrelic.com
  THIRD_PARTY_GIT_AUTHOR_NAME: nr-opensource-bot

jobs:
  job-checkout-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache Deps
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

  # job-test # needed??
  job-test-commits:
    runs-on: ubuntu-latest
    needs: job-checkout-and-build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Commit data files
        run: |
          git config --local user.email "${{ env.THIRD_PARTY_GIT_AUTHOR_EMAIL }}"
          git config --local user.name "${{ env.THIRD_PARTY_GIT_AUTHOR_NAME }}"
          echo "Updated project data files -- committing"
          touch test.md
          git add test.md
          git commit -m "chore: added test.md file"

          # Push to both develop and master here rather than using github-push-action
          remote_repo="https://${GITHUB_ACTOR}:${{ secrets.OPENSOURCE_BOT_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

          git push "${remote_repo}" develop
          CHERRYCOMMIT=`git log -n1 | head -n1 | cut -c8-`

          git checkout master
          git cherry-pick $CHERRYCOMMIT
          git push "${remote_repo}" master

  job-generate-release:
    runs-on: ubuntu-latest
    needs: job-checkout-and-build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # - name: Install dependencies
      #   run: npm ci

      - name: Download Cached Deps
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
